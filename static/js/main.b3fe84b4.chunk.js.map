{"version":3,"sources":["main/home/Home.js","_/helpers/storeMap.js","_/helpers/fetchStore.js","_/hooks/useForm.js","main/api/Client.js","_/helpers/fetch.js","_/services/userService.js","main/users/Form.js","main/users/Info.js","_/component/Icon.js","_/helpers/format.js","main/users/List.js","main/users/index.js","main/app/Container.js","main/app/Navbar.js","main/ReactApp.js","index.js"],"names":["Home","className","createStore","storage","get","key","init","value","getItem","JSON","parse","error","console","warn","put","setItem","stringify","remove","removeItem","clean","localMap","localStorage","createFetchStore","sessionStorage","url","opts","request","createRequest","Promise","resolve","reject","info","method","setTimeout","processRequest","body","URL","host","pathname","index","indexOf","substr","paths","replaceAll","split","shift","map","name","number","parseInt","isNaN","type","storeData","data","refParent","refData","refResult","success","forEach","Array","isArray","find","it","id","message","length","findIndex","updatedAt","Date","splice","getTime","undefined","createdAt","push","ok","text","json","traces","useForm","initialState","validationSchema","useState","values","setValues","handlerRestore","handlerChange","event","processOnChange","handlerValidate","processOnValidation","target","newValues","names","refValues","pop","validations","fetchStore","INIT","path","raw","Client","form","setForm","onChange","onCall","args","log","then","response","a","catch","onClick","e","window","fetch","getToken","createHttp","fetchWrapper","handleRequest","res","post","headers","delete","lookup","filter","create","update","launch","httpRaw","props","userService","params","USER_INIT","size","description","Form","idString","useParams","history","useHistory","user","setUser","onUserChange","onReturn","goBack","useEffect","cache","err","alert","onSubmit","preventDefault","Info","to","Icon","family","color","format","toLocaleString","List","initialValues","useFormLocal","list","setList","onReload","colSpan","ListItem","onCache","UserBrowserIndex","basename","title","UserMemoryIndex","UserHashIndex","UserContent","exact","component","Container","Navbar","ReactApp","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3fe84b4.chunk.js","sourcesContent":["\nexport const Home = () => {\n    return (\n        <div className=\"container\">\n            <h1 className=\"mt-5\">REACT APP BASE</h1>\n            <p className=\"lead\">This app include customs hooks.</p>\n            <ul>\n                <li>File <b>/jsconfig.json</b> reduce the reference path for import modules</li>\n                <li>Directory <b>/src/_/</b> for common elements for the project (components/hooks/services/helpers/others..)</li>\n                <li>Directory <b>/src/main/</b> for the tree navegation for project</li>\n            </ul>\n        </div>\n    )\n}\n","const createStore = (storage) => {\n    return {\n        get: (key, init = {}) => {\n            try {\n                let value = storage.getItem(key);\n                return value ? JSON.parse(value) : init\n            } catch (error) {\n                console.warn('Storage.getItem', key, error);\n                return init\n            }\n        },\n        put: (key, value) => {\n            try {\n                storage.setItem(key, JSON.stringify(value))\n            } catch (error) {\n                console.error('Storage.setItem', key, value, error);\n            }\n        },\n        remove: (key) => {\n            storage.removeItem(key)\n        },\n        clean: () => {\n            storage.clean()\n        }\n    }\n}\n\nexport const localMap = createStore(localStorage);\n\nexport const sessionMap = createStore(sessionStorage);\n","import { localMap } from \"./storeMap\";\n\nexport const createFetchStore = () => {\n    return (url, opts) => {\n        const request = createRequest(url, opts)\n        return new Promise((resolve, reject) => {\n            console.info(request.method, request.url);\n            setTimeout(() => processRequest(request, resolve, reject), 400);\n        });\n    };\n}\n\nconst createRequest = (url, opts) => {\n    let { method, body } = opts\n    let { host, pathname } = new URL(url)\n    const index = pathname.indexOf('/api')\n    if (index !== -1) {\n        host = host + pathname.substr(0, index + 4)\n        pathname = pathname.substr(index + 4)\n    }\n    let paths = pathname.replaceAll(/\\/+/g, '/').split('/')\n    paths.shift()\n    paths = paths.map(name => {\n        const number = parseInt(name);\n        return isNaN(number) ? { value: name, type: 'NAME' } : { value: number, type: 'ID' }\n    })\n    body = body ? JSON.parse(body) : body;\n    return {\n        url,\n        host,\n        paths,\n        method,\n        body\n    }\n}\n\n\n\nconst processRequest = (request, resolve, reject) => {\n    const { method, body, host, paths } = request\n    let storeData = localMap.get(host, { data: {} });\n    let refParent = storeData;\n    let refData = storeData.data;\n    let refResult = {\n        success: true\n    }\n    //----------------------------\n    paths.forEach(({ value, type }) => {\n        if (!refResult.success) {\n            //continue\n        } else if (type === 'NAME' && typeof refData === \"object\") {\n            if (!refData[value]) {\n                refData[value] = []\n            }\n            refParent = refData\n            refData = refParent[value]\n        } else if (type === 'ID' && Array.isArray(refData)) {\n            refParent = refData\n            refData = refParent.find(it => it.id === value);\n        } else {\n            refResult.success = false\n            refResult.message = 'Error en el procesamiento del path'\n        }\n    })\n    //----------------------------\n    const { value, type } = paths[paths.length - 1]\n    if (!refResult.success) {\n        //continue\n    } else if (type === 'ID') {\n        if (!refData) {\n            refResult.success = false\n            refResult.message = 'Registro no encontrado: ' + value\n        } else if (method === 'GET' || method === 'FIND' || method === 'LOOKUP') {\n            refResult.value = refData;\n        } else if (method === 'PUT' || method === 'UPDATE') {\n            const index = refParent.findIndex(it => it.id === value);\n            body.id = parseInt(body.id)\n            body.updatedAt = new Date();\n            refParent[index] = { ...refData, ...body }\n            refResult.value = refParent[index];\n        } else if (method === 'DELETE' || method === 'REMOVE') {\n            const index = refParent.findIndex(it => it.id === value);\n            refParent.splice(index, 1);\n        } else {\n            refResult.success = false\n            refResult.message = 'Metod not allowed'\n        }\n    } else if (type === 'NAME') {\n        if (method === 'GET' || method === 'LIST') {\n            refResult.value = refData;\n        } else if (method === 'POST' || method === 'CREATE') {\n            body.id = parseInt(body.id) || new Date().getTime()\n            const refExist = refData.find(it => it.id === body.id)\n            if (refExist) {\n                refResult.success = false\n                refResult.message = 'ID ya existe - ' + body.id;\n                refResult.value = undefined\n            } else {\n                body.createdAt = new Date();\n                refData.push(body)\n                refResult.value = body\n            }\n        } else {\n            refResult.success = false\n            refResult.message = 'Metod not allowed'\n        }\n    } else {\n        refResult.success = false\n        refResult.message = 'Error: param not allowed'\n    }\n    localMap.put(host, storeData)\n    if (refResult.success) {\n        resolve({\n            ok: true,\n            text: () => Promise.resolve(JSON.stringify(refResult, null, 2)),\n            json: () => Promise.resolve(refResult)\n        });\n    } else {\n        refResult.traces = {\n            method,\n            paths\n        }\n        reject({\n            ok: false,\n            text: () => Promise.resolve(JSON.stringify(refResult, null, 2)),\n            json: () => Promise.resolve(refResult)\n        });\n    }\n}\n\n","import { useEffect, useState } from 'react';\nimport { localMap, sessionMap } from '_/helpers/storeMap';\n\n\nexport const useForm = (initialState, validationSchema = {}) => {\n    const [values, setValues] = useState(initialState);\n    //------------------------\n    const handlerRestore = (value = initialState) => setValues(value);\n    const handlerChange = (event) => processOnChange(event, values, setValues);\n    const handlerValidate = () => processOnValidation(values, validationSchema);\n    //------------------------\n    return [values, setValues, handlerChange, handlerValidate, handlerRestore];\n}\n\nexport const useFormLocal = (key, initialState, validationSchema = {}) => {\n    const initialValues = localMap.get(key, initialState);\n    const [values, setValues] = useState(initialValues);\n    //------------------------\n    const handlerRestore = (value = initialState) => setValues(value);\n    const handlerChange = (event) => processOnChange(event, values, setValues);\n    const handlerValidate = () => processOnValidation(values, validationSchema);\n    //------------------------\n    useEffect(() => localMap.put(key, values), [key, values])\n    return [values, setValues, handlerChange, handlerValidate, handlerRestore];\n}\n\nexport const useFormSession = (key, initialState, validationSchema = {}) => {\n    const initialValues = sessionMap.get(key, initialState)\n    const [values, setValues] = useState(initialValues);\n    //------------------------\n    const handlerRestore = (value = initialState) => setValues(value);\n    const handlerChange = (event) => processOnChange(event, values, setValues);\n    const handlerValidate = () => processOnValidation(values, validationSchema);\n    //------------------------\n    useEffect(() => sessionMap.put(key, values), [key, values])\n    return [values, setValues, handlerChange, handlerValidate, handlerRestore];\n}\n\nconst processOnChange = (event, values, setValues) => {\n    let { name, value } = event.target;\n    let newValues = Array.isArray(values) ? [...values] : { ...values }\n    if (name.indexOf('.') !== -1) {\n        let names = name.split('.')\n        let refValues = newValues;\n        name = names.pop()\n        names.forEach(it => {\n            if (!refValues[it]) {\n                refValues[it] = {}\n            }\n            refValues = refValues[it]\n        });\n        refValues[name] = value;\n    } else {\n        newValues[name] = value;\n    }\n    setValues(newValues);\n}\n\n\nconst processOnValidation = (values, validations) => {\n    return false;\n}","import { createFetchStore } from '_/helpers/fetchStore'\nimport { useForm } from '_/hooks/useForm';\nimport React from 'react'\n\nconst fetchStore = createFetchStore();\n\nconst INIT = {\n    target: 'http://127.0.0.1:4000/app/api',\n    path: '/users',\n    url: '========',\n    data: {\n        id: 1,\n        name: ''\n    },\n    raw: '?'\n}\nexport const Client = () => {\n    const [form, setForm, onChange] = useForm(INIT)\n\n    const onCall = (method, args) => {\n        const body = JSON.stringify(form.data)\n        const url = form.target + form.path + args\n        setForm(it => ({ ...it, url }))\n        console.log('FETCH:', method, url, body);\n        fetchStore(url, { method, body })\n            .then(async response => {\n                const raw = await response.text()\n                setForm(it => ({ ...it, raw }))\n            })\n            .catch(async error => {\n                const raw = 'Error to call service'\n                setForm(it => ({ ...it, raw }))\n            })\n    }\n\n    return (\n        <div>\n            <h3>API CLIENT</h3>\n            <fieldset>\n                <legend>URL</legend>\n                Target:\n                <input name=\"target\"\n                    value={form.target}\n                    onChange={onChange}\n                    className=\"form-control\" />\n                Path:\n                <input name=\"path\"\n                    value={form.path}\n                    onChange={onChange}\n                    className=\"form-control\" />\n            </fieldset>\n            <br />\n            <fieldset>\n                <legend>DATA</legend>\n                ID:\n                <input name=\"data.id\"\n                    value={form.data.id}\n                    onChange={onChange}\n                    className=\"form-control\" />\n                NAME:\n                <input name=\"data.name\"\n                    value={form.data.name}\n                    onChange={onChange}\n                    className=\"form-control\" />\n            </fieldset>\n            <div className=\"btn-groups m-2\">\n                <button onClick={e => onCall('LIST', '')}\n                    className=\"btn btn-primary\">\n                    LIST ALL\n                </button>\n                <button onClick={e => onCall('FIND', '/' + form.data.id)}\n                    className=\"btn btn-primary\">\n                    FIND DATA\n                </button>\n                <button onClick={e => onCall('CREATE', '')}\n                    className=\"btn btn-primary\">\n                    CREATE DATA\n                </button>\n                <button onClick={e => onCall('UPDATE', '/' + form.data.id)}\n                    className=\"btn btn-primary\">\n                    UPDATE DATA\n                </button>\n                <button onClick={e => onCall('REMOVE', '/' + form.data.id)}\n                    className=\"btn btn-primary\">\n                    REMOVE DATA\n                </button>\n            </div>\n            <span className=\"form-control\">{form.url}</span>\n            <pre className=\"card bg-light p-2\">\n                <code>{form.raw}</code>\n            </pre>\n        </div>\n    )\n}\n","import { createFetchStore } from \"./fetchStore\";\n\nconst target = 'http://127.0.0.1:4000/app/api'//process.env.REACT_APP_API_URL;\n\n//const delegateFetch = fetch;\nwindow.fetch = createFetchStore();\n\nexport const setToken = (value) => {\n    localStorage.setItem('token', value);\n}\n\nexport const getToken = () => {\n    return localStorage.getItem('token') || '====NONE====';\n}\n\nexport const fetchRaw = (path, props) => {\n    return fetch(target + path, props);\n}\n\nexport const fetchToken = (path, props = {}) => {\n    let { headers = {} } = props\n    headers['Authorization'] = 'Bearer ' + getToken();\n    props.headers = headers\n    return fetch(target + path, props);\n}\n\nexport const createHttp = (fetchWrapper, handleRequest = async (res) => await res.json()) => {\n    return {\n        get: (url) => {\n            return fetchWrapper(url, {\n                method: 'GET'\n            }).then(handleRequest);\n        },\n        post: (url, body) => {\n            return fetchWrapper(url, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            }).then(handleRequest);\n        },\n        put: (url, body) => {\n            return fetchWrapper(url, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            }).then(handleRequest);\n        },\n        delete: (url) => {\n            return fetchWrapper(url, {\n                method: 'DELETE'\n            }).then(handleRequest);\n        },\n        //----------CURSTOM----------\n        lookup: (url) => {\n            return fetchWrapper(url, {\n                method: 'LOOKUP'\n            }).then(handleRequest);\n        },\n        filter: (url, body) => {\n            return fetchWrapper(url, {\n                method: 'FILTER',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            }).then(handleRequest);\n        },\n        create: (url, body) => {\n            return fetchWrapper(url, {\n                method: 'CREATE',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            }).then(handleRequest);\n        },\n        update: (url, body) => {\n            return fetchWrapper(url, {\n                method: 'UPDATE',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            }).then(handleRequest);\n        },\n        remove: (url) => {\n            return fetchWrapper(url, {\n                method: 'REMOVE'\n            }).then(handleRequest);\n        },\n        launch: (url, body) => {\n            return fetchWrapper(url, {\n                method: 'LAUNCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body)\n            }).then(handleRequest);\n        }\n    }\n}\n\nexport const httpRaw = createHttp(fetchRaw)\n\nexport const httpToken = createHttp(fetchToken)","import { httpRaw } from '_/helpers/fetch';\n\nconst path = '/users';\n\nexport const userService = {\n    getAll: () => {\n        return httpRaw.get(path);\n    },\n    getById: (id) => {\n        return httpRaw.get(`${path}/${id}`);\n    },\n    create: (params) => {\n        return httpRaw.post(path, params);\n    },\n    update: (id, params) => {\n        return httpRaw.put(`${path}/${id}`, params);\n    },\n    delete: (id) => {\n        return httpRaw.delete(`${path}/${id}`);\n    },\n};\n","import React, { useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router'\n\nimport { localMap } from '_/helpers/storeMap'\nimport { useForm } from '_/hooks/useForm'\nimport { userService } from '_/services/userService'\n\nconst USER_INIT = {\n    id: 0,\n    name: '',\n    size: 0,\n    description: ''\n}\nexport const Form = () => {\n    const { id: idString } = useParams();\n    const id = parseInt(idString)\n    let history = useHistory();\n    const [user, setUser, onUserChange] = useForm(USER_INIT)\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (id) {\n            let data = localMap.get('users-list').map(it => it.id === id ? user : it)\n            localMap.put('users-list', data)\n            userService.update(id, user)\n                .then(onReturn)\n        } else {\n            let data = localMap.get('users-list', [])\n            data.push(user)\n            localMap.put('users-list', data)\n            userService.create(user)\n                .then(onReturn)\n        }\n    }\n    const onReturn = () => {\n        history.goBack()\n    }\n    const onReload = () => {\n        const cache = localMap.get('users-item', USER_INIT)\n        if (id === cache.id) {\n            setUser(cache)\n        } else if (id) {\n            userService.getById(id)\n                .then(it => {\n                    setUser(it.value)\n                })\n                .catch(err => {\n                    alert('Fetch Error : ', err);\n                });\n        }\n    }\n    useEffect(onReload, [id, setUser])\n    return (\n        <form onSubmit={onSubmit} className=\"animate__animated animate__fadeIn animate__faster\">\n            <div className=\"card\">\n                <header className=\"card-header h3\">\n                    Form User {id}\n                </header>\n                <main className=\"card-body\">\n                    <div>\n                        Name:\n                        <input name=\"name\"\n                            value={user.name}\n                            onChange={onUserChange}\n                            className=\"form-control\" />\n                        Size:\n                        <input name=\"size\"\n                            value={user.size}\n                            onChange={onUserChange}\n                            type=\"number\"\n                            className=\"form-control\" />\n                        Description:\n                        <input name=\"description\"\n                            value={user.description}\n                            onChange={onUserChange}\n                            className=\"form-control\" />\n                    </div>\n                </main>\n                <footer className=\"card-footer\">\n                    <button type=\"button\"\n                        className=\"btn btn-sm\"\n                        onClick={onReturn}>\n                        Back\n                    </button>\n                    <button type=\"submit\"\n                        className=\"btn btn-sm btn-primary\">\n                        Guardar\n                    </button>\n                </footer>\n            </div>\n        </form>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router'\n\nimport { Link } from 'react-router-dom';\nimport { localMap } from '_/helpers/storeMap';\nimport { useForm } from '_/hooks/useForm';\nimport { userService } from '_/services/userService'\n\nconst USER_INIT = {\n    id: 0,\n    name: '',\n    description: ''\n}\nexport const Info = () => {\n    const { id: idString } = useParams();\n    const id = parseInt(idString)\n    let history = useHistory();\n    const [user, setUser] = useForm(USER_INIT)\n    const onSubmit = (e) => {\n        e.preventDefault();\n        userService.delete(id)\n        history.goBack()\n    }\n    const onReload = () => {\n        const cache = localMap.get('users-item', USER_INIT)\n        if (id === cache.id) {\n            setUser(cache)\n        } else {\n            userService.getById(id)\n                .then(it => {\n                    setUser(it.value)\n                    console.log('GET_IT:', it);\n                })\n        }\n    }\n    useEffect(onReload, [id, setUser])\n    return (\n        <form onSubmit={onSubmit} className=\"animate__animated animate__fadeIn animate__faster\">\n            <div className=\"card\">\n                <header className=\"card-header h3\">\n                    Info User {id}\n                </header>\n                <main className=\"card-body\">\n                    Name:\n                    <span className=\"form-control\">{user.name}</span>\n                    Description:\n                    <span className=\"form-control\">{user.description}</span>\n                </main>\n                <footer className=\"card-footer\">\n                    <Link to=\"/\"\n                        className=\"btn btn-sm\">\n                        Back\n                    </Link>\n                    <button type=\"submit\"\n                        className=\"btn btn-sm btn-danger\">\n                        Eliminar\n                    </button>\n                </footer>\n            </div>\n        </form>\n    )\n}\n","import React from 'react'\n\nexport const Icon = ({ name, family = 'fa', size, color, className = '', ...props }) => {\n    props.className = `${family} ${family}-${name} ${family}-${size} text-${color} ${className}`\n    return (\n        <i {...props}></i>\n    )\n}\n","\n\nexport const dateFormat = (value) => {\n    if (typeof value === 'string') {\n        value = Date.parse(value)\n    }\n    if (typeof value === 'number') {\n        value = new Date(value)\n    }\n    if (value instanceof Date) {\n        return value.toLocaleString('es-BO');\n    }\n    return value;\n}\nexport const numberFormat = (value) => {\n    return value\n}\nexport const moneyFormat = (value, currency = 'BOB') => {\n    if (value === undefined) {\n        return '';\n    }\n    if (typeof value === 'string') {\n        value = parseFloat(value)\n    }\n    if (typeof value === 'number') {\n        return value.toLocaleString('es-BO', { style: 'currency', currency })\n    }\n    return value + ' ' + currency\n}\n\n\nexport const format = {\n    date: dateFormat,\n    number: numberFormat,\n    money: moneyFormat\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Icon } from '_/component/Icon'\n\nimport { format } from '_/helpers/format'\nimport { localMap } from '_/helpers/storeMap'\nimport { useFormLocal } from '_/hooks/useForm'\nimport { userService } from '_/services/userService'\n\nexport const List = () => {\n    const [list, setList] = useFormLocal('users-list', null)\n    const onReload = () => {\n        userService.getAll()\n            .then(it => {\n                setList(it.value)\n            })\n    }\n    useEffect(onReload, [setList])\n\n    return (\n        <div className=\"animate__animated animate__fadeIn animate__faster\">\n            <h3>\n                <button onClick={onReload} className=\"btn btn-lg\">\n                    <Icon name=\"refresh\" />\n                </button>\n                Lista de Usuarios\n            </h3>\n            <Link to=\"/add\"\n                className=\"btn btn-sm btn-success mb-2\">\n                Add User\n            </Link>\n            <table className=\"table table-sm\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>NAME</th>\n                        <th>SIZE</th>\n                        <th>DESCRIPTION</th>\n                        <th>CREATED AT</th>\n                        <th>UPDATED AT</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {!list && <tr><td colSpan={10}><div className=\"spinner-border spinner-border-lg align-center\"></div></td></tr>}\n                    {list && list.map(it => <ListItem it={it} key={it.id} />)}\n                    {list && !list.length && <tr><td colSpan={10}>Sin Registros</td></tr>}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\n\nconst ListItem = ({ it }) => {\n    const onCache = () => {\n        localMap.put('users-item', it)\n    }\n    return (\n        <tr>\n            <td>{it.id}</td>\n            <td>{it.name}</td>\n            <td>{it.size}</td>\n            <td>{it.description}</td>\n            <td>{format.date(it.createdAt)}</td>\n            <td>{format.date(it.updatedAt)}</td>\n            <th>\n                <Link to={`/edit/${it.id}`}\n                    onClick={onCache}\n                    className=\"btn btn-sm\">\n                    Edit\n                </Link>\n                <Link to={`/view/${it.id}`}\n                    onClick={onCache}\n                    className=\"btn btn-sm\">\n                    Eliminar\n                </Link>\n            </th>\n        </tr>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { BrowserRouter, HashRouter, MemoryRouter } from \"react-router-dom\";\n\nimport { Form } from \"./Form\";\nimport { Info } from './Info';\nimport { List } from \"./List\";\n\nexport const UserBrowserIndex = () => {\n    return (\n        <BrowserRouter basename=\"/users-browser\">\n            <UserContent title=\"Gestion de Usuarios - Navegacion en Browser\" />\n        </BrowserRouter>\n    )\n}\n\nexport const UserMemoryIndex = () => {\n    return (\n        <MemoryRouter>\n            <UserContent title=\"Gestion de Usuarios - Navegacion en Memoria\" />\n        </MemoryRouter>\n    )\n}\n\nexport const UserHashIndex = () => {\n    return (\n        <HashRouter>\n            <UserContent title=\"Gestion de Usuarios - Navegacion en Hash\" />\n        </HashRouter>\n    )\n}\n\nconst UserContent = ({ title }) => {\n    return (\n        <div className=\"card\">\n            <h1 className=\"card-header\">{title}</h1>\n            <div className=\"card-body\">\n                <Switch>\n                    <Route exact path=\"/\" component={List} />\n                    <Route path=\"/add\" component={Form} />\n                    <Route path=\"/edit/:id\" component={Form} />\n                    <Route path=\"/view/:id\" component={Info} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\n\nimport { Home } from 'main/home/Home'\nimport { Client } from 'main/api/Client'\nimport { UserBrowserIndex, UserHashIndex, UserMemoryIndex } from 'main/users'\n\nexport const Container = () => {\n    return (\n        <div className=\"container pt-4 pb-4\">\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/users-hash\" component={UserHashIndex} />\n                <Route path=\"/users-memory\" component={UserMemoryIndex} />\n                <Route path=\"/users-browser\" component={UserBrowserIndex} />\n                <Route path=\"/api\" component={Client} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <div className=\"navbar-nav\">\n                <NavLink exact to=\"/\" className=\"nav-item nav-link\">Home</NavLink>\n                <NavLink to=\"/users-browser\" className=\"nav-item nav-link\">Browser Users</NavLink>\n                <NavLink to=\"/users-memory\" className=\"nav-item nav-link\">Memory Users</NavLink>\n                <NavLink to=\"/users-hash\" className=\"nav-item nav-link\">Hash Users</NavLink>\n                <NavLink to=\"/api\" className=\"nav-item nav-link\">Client Api</NavLink>\n            </div>\n        </nav>\n    )\n}\n","import 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\nimport 'animate.css/animate.css'\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Container } from \"./app/Container\";\nimport { Navbar } from \"./app/Navbar\";\n\nfunction ReactApp() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Container />\n    </BrowserRouter>\n  );\n}\n\nexport default ReactApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactApp from './main/ReactApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}